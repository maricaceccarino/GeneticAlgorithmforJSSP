/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package it.unina.ceccarino.gaforjss.gui.panels;

import it.unina.ceccarino.gaforjss.exceptions.InvalidSettingsException;
import it.unina.ceccarino.gaforjss.logic.EventListener;
import it.unina.ceccarino.gaforjss.logic.EventManager;
import it.unina.ceccarino.gaforjss.model.Settings;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author sommovir
 */
public class SettingPanels extends javax.swing.JPanel implements EventListener {

    private int temporaryElected;
    private int temporaryCrossover;
    private int temproaryMutation;
    private int maxJobQnt;
    private int populationSize;
    private int maxIteration;

    private NumberFormatter formatter;

    /**
     * Creates new form SettingPanels
     */
    public SettingPanels() {
        NumberFormat format = NumberFormat.getInstance();
        formatter = new NumberFormatter(format);
        formatter.setValueClass(Integer.class);
        formatter.setMinimum(0);
        formatter.setMaximum(10000);
        formatter.setAllowsInvalid(false);
        // If you want the value to be committed on each keystroke instead of focus lost
        formatter.setCommitsOnValidEdit(true);
        initComponents();
        EventManager.getInstance().addEventListener(this);
        load();

    }

    private void load() {
        this.temporaryCrossover = Settings.getInstance().getCrossoverSubgroupSize();
        this.temporaryElected = Settings.getInstance().getElectedPercentage();
        this.temproaryMutation = Settings.getInstance().getMutationSubgroupSize();
        this.populationSize = Settings.getInstance().getPopulationSize();
        this.maxJobQnt = Settings.getInstance().getMaxJobOveralQuantity();
        this.maxIteration = Settings.getInstance().getMaxIteration();

        this.jSpinner_crossover.setValue(this.temporaryCrossover);
        this.jSpinner_elected.setValue(this.temporaryElected);
        this.jSpinner_maxJob.setValue(this.maxJobQnt);
        this.jSpinner_mutation.setValue(this.temproaryMutation);
        this.jSpinner_sizePopulation.setValue(this.populationSize);
        this.jSpinner_maxIteration.setValue(this.maxIteration);
    }

    public void cancel() throws InvalidSettingsException {
        Settings.getInstance().setCrossoverSubgroupSize(this.temporaryCrossover);
        Settings.getInstance().setElectedPercentage(this.temporaryElected);
        Settings.getInstance().setMutationSubgroupSize(this.temproaryMutation);
        Settings.getInstance().setPopulationSize(this.populationSize);
        Settings.getInstance().setMaxJobOveralQuantity(this.maxJobQnt);
        Settings.getInstance().setMaxIteration(this.maxIteration);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSpinner_maxJob = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinner_elected = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner_crossover = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSpinner_mutation = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSpinner_sizePopulation = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        jSpinner_maxIteration = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        populationSubgroupPanel1 = new it.unina.ceccarino.gaforjss.gui.panels.PopulationSubgroupPanel();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Jobs"));

        jLabel3.setText("Max Job overal quantity: ");

        jSpinner_maxJob.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinner_maxJob.setModel(new javax.swing.SpinnerNumberModel(25, 6, null, 1));
        jSpinner_maxJob.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_maxJobStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner_maxJob, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinner_maxJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Population"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Elected population");
        jLabel1.setToolTipText("Portion of population with best fitness");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 40, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jSpinner_elected.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinner_elected.setModel(new javax.swing.SpinnerNumberModel(5, 0, 20, 1));
        jSpinner_elected.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_electedStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 6, 0, 0);
        jPanel3.add(jSpinner_elected, gridBagConstraints);

        jLabel2.setText("% ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 6, 0, 11);
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Number of Individuals per Population");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 11, 10, 0);
        jPanel3.add(jLabel4, gridBagConstraints);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Crossover population");
        jLabel5.setToolTipText("Portion of non-elected people to which crossover will be applied");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 40, 0, 0);
        jPanel3.add(jLabel5, gridBagConstraints);

        jSpinner_crossover.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinner_crossover.setModel(new javax.swing.SpinnerNumberModel(20, 0, 40, 1));
        jSpinner_crossover.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_crossoverStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 6, 0, 0);
        jPanel3.add(jSpinner_crossover, gridBagConstraints);

        jLabel6.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 6, 0, 0);
        jPanel3.add(jLabel6, gridBagConstraints);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Mutation population");
        jLabel7.setToolTipText("Portion of remaining population to  which mutation will be applied");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 40, 0, 0);
        jPanel3.add(jLabel7, gridBagConstraints);

        jSpinner_mutation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinner_mutation.setModel(new javax.swing.SpinnerNumberModel(20, 0, 40, 1));
        jSpinner_mutation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_mutationStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 6, 0, 0);
        jPanel3.add(jSpinner_mutation, gridBagConstraints);

        jLabel8.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 6, 0, 0);
        jPanel3.add(jLabel8, gridBagConstraints);

        jLabel9.setBackground(new java.awt.Color(0, 102, 204));
        jLabel9.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 89;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 11, 0, 0);
        jPanel3.add(jLabel9, gridBagConstraints);

        jLabel10.setBackground(new java.awt.Color(255, 255, 0));
        jLabel10.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 89;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 11, 0, 0);
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel11.setBackground(new java.awt.Color(153, 0, 102));
        jLabel11.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 89;
        gridBagConstraints.ipady = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 11, 0, 0);
        jPanel3.add(jLabel11, gridBagConstraints);

        jSpinner_sizePopulation.setModel(new javax.swing.SpinnerNumberModel(100, 1, null, 1));
        jSpinner_sizePopulation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_sizePopulationStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jSpinner_sizePopulation, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("End Condition"));

        jSpinner_maxIteration.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinner_maxIteration.setModel(new javax.swing.SpinnerNumberModel(300, 1, 10000000, 1));
        jSpinner_maxIteration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner_maxIterationStateChanged(evt);
            }
        });

        jLabel12.setText("Max Iterations:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner_maxIteration, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_maxIteration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Distribution Preview"));

        populationSubgroupPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Distribution Preview"));

        javax.swing.GroupLayout populationSubgroupPanel1Layout = new javax.swing.GroupLayout(populationSubgroupPanel1);
        populationSubgroupPanel1.setLayout(populationSubgroupPanel1Layout);
        populationSubgroupPanel1Layout.setHorizontalGroup(
            populationSubgroupPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        populationSubgroupPanel1Layout.setVerticalGroup(
            populationSubgroupPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(populationSubgroupPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(populationSubgroupPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSpinner_maxJobStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_maxJobStateChanged
        System.out.println("state");
        Settings.getInstance().setMaxJobOveralQuantity((Integer) this.jSpinner_maxJob.getValue());
    }//GEN-LAST:event_jSpinner_maxJobStateChanged

    private void jSpinner_electedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_electedStateChanged
//        System.out.println("new state: " + (Integer) this.jSpinner_elected.getValue());
        try {
            Settings.getInstance().setElectedPercentage((Integer) this.jSpinner_elected.getValue());
            EventManager.getInstance().settingsChanged();
        } catch (InvalidSettingsException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jSpinner_electedStateChanged

    private void jSpinner_crossoverStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_crossoverStateChanged
//        System.out.println("new state: " + (Integer) this.jSpinner_crossover.getValue());

        Settings.getInstance().setCrossoverSubgroupSize((Integer) this.jSpinner_crossover.getValue());
        EventManager.getInstance().settingsChanged();

    }//GEN-LAST:event_jSpinner_crossoverStateChanged

    private void jSpinner_mutationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_mutationStateChanged
//        System.out.println("new state: " + (Integer) this.jSpinner_mutation.getValue());

        Settings.getInstance().setMutationSubgroupSize((Integer) this.jSpinner_mutation.getValue());
        EventManager.getInstance().settingsChanged();
    }//GEN-LAST:event_jSpinner_mutationStateChanged

    private void jSpinner_maxIterationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_maxIterationStateChanged
        Settings.getInstance().setMaxIteration((Integer) this.jSpinner_maxIteration.getValue());
    }//GEN-LAST:event_jSpinner_maxIterationStateChanged

    private void jSpinner_sizePopulationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner_sizePopulationStateChanged
        Integer population = (Integer) SettingPanels.this.jSpinner_sizePopulation.getValue();
        Settings.getInstance().setPopulationSize(population);
        EventManager.getInstance().settingsChanged();
    }//GEN-LAST:event_jSpinner_sizePopulationStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSpinner jSpinner_crossover;
    private javax.swing.JSpinner jSpinner_elected;
    private javax.swing.JSpinner jSpinner_maxIteration;
    private javax.swing.JSpinner jSpinner_maxJob;
    private javax.swing.JSpinner jSpinner_mutation;
    private javax.swing.JSpinner jSpinner_sizePopulation;
    private it.unina.ceccarino.gaforjss.gui.panels.PopulationSubgroupPanel populationSubgroupPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void generationStarted() {
    }

    @Override
    public void generationEnded() {
    }

    @Override
    public void algoStart() {
    }

    @Override
    public void solutionFound() {
    }

    @Override
    public void settingsChanged() {
        this.populationSubgroupPanel1.repaint();
    }

    @Override
    public void backToDefault() {
        load();
        this.populationSubgroupPanel1.repaint();
    }
}
